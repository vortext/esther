* Progress
** DONE hook up OpenAI
** DONE store results
- sqllite storing memories
** DONE use results, better context (locale, time, memories)
** DONE markdown, KaTeX and such
** DONE /inspect command
** DONE /status command
** DONE styling according to style vibes
** DONE user flow (just use sqllite)
** DONE vibes for login page
** DONE logout functionality (/logout)
** DONE refactor memory and login/auth controllers
** DONE geoip for time of day?
** DONE maybe bouncing ball energy for loading?
** DONE introduce as book fiction literary work imaginary scene
** DONE keyword frecency query
** DONE multi user?
_ encrypt contents
_ encrypt keywords
_ add vault to user
_ uid in vault
_ more user information in session (vault)
** DONE use data, iv as columns instead of the json for memory and memory_keywords
** DONE better input UI? (textfield, resize, like Signal?)
** DONE just slurp the secrets.edn file and get rid of the rest (secrets.clj)
** DONE refactor memory to only have contents
** DONE error handling
** DONE better integrate keywords in narrative
** DONE check multi-line markdown
** DONE local version of fonts
** DONE input checking and validation (also converse.clj)
** DONE Remember and show for a day, clear page every day (aligns with the prominent date)
** DONE /clear command (clear all memory for uid)
** DONE check logging levels (disable debug outside dev)
** DONE llma locally
** DONE url handling (it renders)
** DONE llama tweaks
- json grammar :D
- performance tweaks (gpu layers, cores)
** DONE keep for llama.cpp
- calculate token-length (and set)
- up the context
** TODO try openorca-platypus2-13b
- Requires different prompt template format see https://huggingface.co/Open-Orca/OpenOrcaxOpenChat-Preview2-13B
** DONE get rid of sid
** TODO link parsing?
** TODO experiment with multi-turn
** DONE weather API integration
** DONE fix mutli-line input scroll to bottom of page (css?)
** TODO move Llama config to system.edn
** TODO time of day etc context in prompt
** TODO history on first request
** DONE deprecate openai
** TODO integrate https://github.com/spencermountain/compromise?
** TODO embeddings for memory retrieval and context
- Add memories during converse into associative mem
- Retrieve similar memories (if any) => guids (associate)
- Inject similar memories in user request context
- https://github.com/nmslib/hnswlib (via GraalVM llvm?)
- https://github.com/jelmerk/hnswlib [com.github.jelmerk/hnswlib-core "1.1.0"] (too slow)
- https://github.com/stepstone-tech/hnswlib-jna
** DONE harmonize markdown handling using graalvm
** TODO harmonize emoji handling using graalvm?
** TODO dark mode
** TODO security and hosting
** TODO test infrastructure and tests
** TODO deploy and build shizzle (Github actions?)
** TODO better intro flow
** TODO share a page (static gen)
** TODO /help command
** TODO sign-up page
** TODO app? legal, ethics, billing, subscriptions, etc.
* Ideas for later
** TODO calendar page (for memories)?
** TODO image upload (img-to-text?)
** TODO offline desktop app?
** TODO weird bug where login shows in memory.
** TODO better error handling subprocesses (get rid of pty_bridge?)
** TODO /imagine command (no solutions for this ATM)
- hook up image generation (StableDiffusionAPI is too crappy)
- integrate image describe into memory
- https://github.com/deep-floyd/IF maybe?
- store description and image in memory contents
- use image describe as context for converse
- stablediffusion locally?
